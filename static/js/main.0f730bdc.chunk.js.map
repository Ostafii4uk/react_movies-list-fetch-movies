{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Loader/Loader.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","Loader","FindMovie","onAddMovie","useState","title","setTitle","foundedMovie","setFoundedMovie","isLoaded","setIsLoaded","hasError","setHasError","htmlFor","type","id","placeholder","classname","value","onChange","event","target","trimStart","onClick","fetch","then","res","json","Error","status","statusText","request","catch","disabled","length","preventDefault","App","React","memo","setMovies","addMovie","useCallback","movieForAdd","some","ReactDOM","render","document","getElementById"],"mappings":"yVAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,wBCZRC,G,MAAmB,kBAC9B,sBAAKV,UAAU,WAAf,UACE,wBACA,wBACA,wBACA,6BCGSW,EAA6B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAuB,MAA/D,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KA4CA,OACE,qCACE,uBAAMrB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQsB,QAAQ,cAAjC,yBAIA,qBAAKtB,UAAU,UAAf,SACE,uBACEuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZzB,UAAW0B,IACT,QACA,CAAE,YAAaN,IAEjBO,MAAOb,EACPc,SA5DS,SAACC,GACpBd,EAASc,EAAMC,OAAOH,MAAMI,aAE5BZ,GAAY,GACZE,GAAY,QA4DLD,GACC,mBAAGpB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,kBACVgC,QArEM,WAChBb,GAAY,GACZE,GAAY,GACZJ,EAAgB,MC1BG,SAACH,GACtB,OAAOmB,MAAM,GAAD,OAHG,+CAGH,OAAenB,IACxBoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJ,GAAIA,EAAIE,MACN,MAAM,IAAIA,MAAJ,UAAaF,EAAIG,OAAjB,cAA6BH,EAAII,aAGzC,OAAOJ,KDoBTK,CAAQ1B,GACLoB,MAAK,SAACC,GACLhB,GAAY,GAEPgB,EAIHlB,EAAgBkB,IAHhBd,GAAY,GACZJ,EAAgB,UAKnBwB,OAAM,kBAAMpB,GAAY,OAsDjBqB,SAAU5B,EAAM6B,OAAS,EAJ3B,4BAUF,qBAAK3C,UAAU,UAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,oBACVgC,QA7DS,SACnBH,GAGAA,EAAMe,iBAEF5B,IACFJ,EAAWI,GAEXD,EAAS,IACTE,EAAgB,MAChBE,GAAY,GACZE,GAAY,KAkDJqB,UAAW1B,EAJb,qCAYN,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCgB,GACC,cAAC,EAAD,CAAWjB,MAAOiB,IAGnBE,IACGE,GAEF,cAAC,EAAD,WEtHGyB,EAAgBC,IAAMC,MAAK,WACtC,MAA4BlC,mBAAkB,IAA9C,mBAAON,EAAP,KAAeyC,EAAf,KAEMC,EAAWC,uBAAY,SAACC,GACxB5C,EAAO6C,MAAK,SAAArD,GAAK,OAAIA,EAAMU,SAAW0C,EAAY1C,WAItDuC,EAAU,GAAD,mBAAKzC,GAAL,CAAa4C,OACrB,CAAC5C,IAEJ,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWY,WAAYqC,YClB/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0f730bdc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classname from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\nimport { Loader } from '../Loader/Loader';\n\ninterface Props {\n  onAddMovie: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [title, setTitle] = useState('');\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.trimStart());\n\n    setIsLoaded(false);\n    setHasError(false);\n  };\n\n  const findMovie = () => {\n    setIsLoaded(true);\n    setHasError(false);\n    setFoundedMovie(null);\n\n    request(title)\n      .then((res) => {\n        setIsLoaded(false);\n\n        if (!res) {\n          setHasError(true);\n          setFoundedMovie(null);\n        } else {\n          setFoundedMovie(res);\n        }\n      })\n      .catch(() => setHasError(true));\n  };\n\n  const handleSubmit = (\n    event: React.MouseEvent<HTMLButtonElement>\n    | React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    if (foundedMovie) {\n      onAddMovie(foundedMovie);\n\n      setTitle('');\n      setFoundedMovie(null);\n      setIsLoaded(false);\n      setHasError(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classname(\n                'input',\n                { 'is-danger': hasError },\n              )}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n              disabled={title.length < 1}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleSubmit}\n              disabled={!foundedMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundedMovie && (\n          <MovieCard movie={foundedMovie} />\n        )}\n\n        {isLoaded\n        && !hasError\n        && (\n          <Loader />\n        )}\n      </div>\n\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=f1ce339b&t=';\n\nexport const request = (title: string) => {\n  return fetch(`${BASE_URL}${title}`)\n    .then(res => res.json())\n    .then(res => {\n      if (res.Error) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res;\n    });\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = React.memo(() => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movieForAdd: Movie) => {\n    if (movies.some(movie => movie.imdbID === movieForAdd.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, movieForAdd]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}